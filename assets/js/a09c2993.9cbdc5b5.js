"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[4128],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>f});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var c=r.createContext({}),s=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},u=function(e){var t=s(e.components);return r.createElement(c.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,i=e.originalType,c=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),d=s(n),f=o,g=d["".concat(c,".").concat(f)]||d[f]||p[f]||i;return n?r.createElement(g,a(a({ref:t},u),{},{components:n})):r.createElement(g,a({ref:t},u))}));function f(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=n.length,a=new Array(i);a[0]=d;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l.mdxType="string"==typeof e?e:o,a[1]=l;for(var s=2;s<i;s++)a[s]=n[s];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},8495:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>a,default:()=>p,frontMatter:()=>i,metadata:()=>l,toc:()=>s});var r=n(7462),o=(n(7294),n(3905));const i={id:"introduction",title:"Introduction",tags:["introduction"],sidebar_position:1},a="Introduction",l={unversionedId:"introduction",id:"introduction",title:"Introduction",description:"bloopie helps startup teams to keep track of the different states of their underlying architecture so that everyone can have an overview and be up to date with the current state. To achieve this goal bloopie uses mainly an agent based architecture where the users will need to download the bloopie agent and deploy it in their cloud. The agent will be instructed to crawl what is configured in the configuration file.",source:"@site/docs/introduction.md",sourceDirName:".",slug:"/introduction",permalink:"/docs/introduction",editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/introduction.md",tags:[{label:"introduction",permalink:"/docs/tags/introduction"}],version:"current",sidebarPosition:1,frontMatter:{id:"introduction",title:"Introduction",tags:["introduction"],sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"Tutorial Intro",permalink:"/docs/intro"},next:{title:"Installation Binaries",permalink:"/docs/install/binaries"}},c={},s=[{value:"Get Started",id:"get-started",level:2},{value:"Configuration",id:"configuration",level:2},{value:"Deployment",id:"deployment",level:2}],u={toc:s};function p(e){let{components:t,...n}=e;return(0,o.kt)("wrapper",(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"introduction"},"Introduction"),(0,o.kt)("p",null,"bloopie helps startup teams to keep track of the different states of their underlying architecture so that everyone can have an overview and be up to date with the current state. To achieve this goal bloopie uses mainly an agent based architecture where the users will need to download the bloopie agent and deploy it in their cloud. The agent will be instructed to crawl what is configured in the configuration file."),(0,o.kt)("p",null,"These pages cover concepts of bloopie, setup steps, and configurations."),(0,o.kt)("h2",{id:"get-started"},"Get Started"),(0,o.kt)("p",null,"This section explains how to install bloopie by using one of the following methods:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"/docs/install/binaries"},"Binaries")," for direct downloads to run on Linux"),(0,o.kt)("li",{parentName:"ul"},"Docker for repeatable, scalable installations"),(0,o.kt)("li",{parentName:"ul"},"Homebrew for running bloopie on MacOS")),(0,o.kt)("h2",{id:"configuration"},"Configuration"),(0,o.kt)("p",null,"This section explains how to correctly configure the bloopi agent."),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"/docs/config/aws/aws-config"},"AWS")," for configuring the AWS crawler"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"/docs/config/aws-flowlogs/aws-flowlogs-config"},"AWS VPC FlowLogs")," for configuring AWS FlowLogs"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"/docs/config/postgre/postgresql"},"PostgreSQL")," for configuring the PostgreSQL crawler"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"/docs/config/kubernetes/kubernetes"},"Kubernetes")," for configuring the Kubernetes crawler")),(0,o.kt)("h2",{id:"deployment"},"Deployment"),(0,o.kt)("p",null,"This sections explains how to deploy bloopie in different cloud environments."),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Aamazon AMI"),(0,o.kt)("li",{parentName:"ul"},"Kubernetes"),(0,o.kt)("li",{parentName:"ul"},"DigitalOcean Droplet")))}p.isMDXComponent=!0}}]);